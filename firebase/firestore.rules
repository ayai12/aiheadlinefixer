rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // User profile document at users/{uid}
    match /users/{uid} {
      // Allow the authenticated user to read and write ONLY their own document
      allow read, create, update, delete: if request.auth != null && request.auth.uid == uid;

      // History subcollection: users/{uid}/history/{docId}
      match /history/{docId} {
        // Allow the authenticated user to read and write ONLY their own history
        allow read, create, update, delete: if request.auth != null && request.auth.uid == uid;
      }

      // Payments subcollection (read-only to the owner if you mirror Stripe events)
      match /payments/{paymentId} {
        allow read: if request.auth != null && request.auth.uid == uid;
        // MVP: allow the user to create their own payment record from the client success page
        // NOTE: For production, switch this to server-side only (Stripe webhook / Admin SDK)
        allow create: if request.auth != null && request.auth.uid == uid;
        allow update, delete: if false;
      }
    }

    // Deny all other access by default
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
